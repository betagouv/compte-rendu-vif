/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as PdfReportIdImport } from './routes/pdf.$reportId'
import { Route as ExportReportIdImport } from './routes/export.$reportId'
import { Route as EditReportIdImport } from './routes/edit.$reportId'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const ResetPasswordIndexLazyImport = createFileRoute('/reset-password/')()
const ResetPasswordLinkLazyImport = createFileRoute('/reset-password/$link')()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordIndexLazyRoute = ResetPasswordIndexLazyImport.update({
  path: '/reset-password/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/reset-password.index.lazy').then((d) => d.Route),
)

const ResetPasswordLinkLazyRoute = ResetPasswordLinkLazyImport.update({
  path: '/reset-password/$link',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/reset-password.$link.lazy').then((d) => d.Route),
)

const PdfReportIdRoute = PdfReportIdImport.update({
  path: '/pdf/$reportId',
  getParentRoute: () => rootRoute,
} as any)

const ExportReportIdRoute = ExportReportIdImport.update({
  path: '/export/$reportId',
  getParentRoute: () => rootRoute,
} as any)

const EditReportIdRoute = EditReportIdImport.update({
  path: '/edit/$reportId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/edit/$reportId': {
      preLoaderRoute: typeof EditReportIdImport
      parentRoute: typeof rootRoute
    }
    '/export/$reportId': {
      preLoaderRoute: typeof ExportReportIdImport
      parentRoute: typeof rootRoute
    }
    '/pdf/$reportId': {
      preLoaderRoute: typeof PdfReportIdImport
      parentRoute: typeof rootRoute
    }
    '/reset-password/$link': {
      preLoaderRoute: typeof ResetPasswordLinkLazyImport
      parentRoute: typeof rootRoute
    }
    '/reset-password/': {
      preLoaderRoute: typeof ResetPasswordIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  LoginRoute,
  SignupLazyRoute,
  EditReportIdRoute,
  ExportReportIdRoute,
  PdfReportIdRoute,
  ResetPasswordLinkLazyRoute,
  ResetPasswordIndexLazyRoute,
])

/* prettier-ignore-end */
